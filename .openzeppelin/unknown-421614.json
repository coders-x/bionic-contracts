{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xcD82002c6cae4ECDdd9ad58750619c0Cb3fDABa3",
      "txHash": "0x493aa6608144ac3313a1c04619d0e6daa64af837b128700d06353c91a20024df",
      "kind": "uups"
    },
    {
      "address": "0x3cb524271e0B0EdFf44C738D5ba354DB6ce6fd2a",
      "txHash": "0x958f2294d02b856f5596268726a0742869b3dcd1abe919693908bab361dce13a",
      "kind": "uups"
    },
    {
      "address": "0x9170d0ba786A2c33a0f8CD1b7819c113D7158437",
      "txHash": "0x4c090a735a96aee6b91fbc6045a0a4851c1258b0ed0d05d1ccc3f9fbcc13eceb",
      "kind": "uups"
    },
    {
      "address": "0xB2D389692a138E002cFf6fB4F3c0CBa74206B4ec",
      "txHash": "0x9af7751dbf730bcbc594b170ddd435608ea04ea7c13333af53f05e406d0e2cd2",
      "kind": "uups"
    },
    {
      "address": "0x34278B198852CCCD6Bd535eb08E45620dcf9ca3b",
      "txHash": "0xaf0bb9aaedbf94c5f20a5aa9c2ed5ad28ba690bd42d94ef2d1facc2826a3ab65",
      "kind": "uups"
    },
    {
      "address": "0xf6BE8224dD649997F36D0316101a7b31675b9d4E",
      "txHash": "0xe7195c0a8831f4559da2d914e119f851851a9e3d8b2408648e5f6306e0983ff5",
      "kind": "uups"
    },
    {
      "address": "0xB233138Ad30ff5be4ee1127598Af0d7f8cd705ED",
      "txHash": "0xcae948f200c129704f080fd803fe32bfd22d708a2ca507b266491f7cabf7e620",
      "kind": "uups"
    },
    {
      "address": "0xC58B80ba1B576F2F4675982264cD904955E00cB2",
      "txHash": "0x0f5480828d8e21d5890975a8c851a4ea0ac2b1bf0fd54f5e35610ebdc4446fbd",
      "kind": "uups"
    },
    {
      "address": "0x73685c956Fdb9f2094E91462a00eBBeeA55cF4F1",
      "txHash": "0x70f95935be1d2f3d6ca115398c6f009907ee5c1bcc82cbd41a327d3557d13273",
      "kind": "uups"
    },
    {
      "address": "0x71F83c79CF2532f4B313B46FFC684c4D9fC25ac5",
      "txHash": "0x4e24f9cdfddf8d57ab4489c4c8ecc383933f224214f0df91071c554fbb4c09c5",
      "kind": "uups"
    },
    {
      "address": "0x3FFb6a833ae70b7533d37cB8A280f02A1682b0B6",
      "txHash": "0x4750faa15bd7dd0c6f33a1bf4ca8c16b451627b52cb2aa6f6a3e1eb0ab3a2b22",
      "kind": "uups"
    },
    {
      "address": "0x7C401bcD33208FD92816d9c575aCeBCCE4c65b16",
      "txHash": "0x129afb578860db1592b3a163673fc73670f838d55455f39710e71830435bba5f",
      "kind": "uups"
    }
  ],
  "impls": {
    "a8781165b81cacce73584c913feedf687d7bd93ec756c9ae9b2e084848d7ddf2": {
      "address": "0x2c5C320832E0ACB58cc8BAbC1c7FDb6700B1a903",
      "txHash": "0x1ee7405708c2691f7794a8660ff1cc88ae744e7530d4c7d82963573a6a93763d",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_accountBalanceSnapshots",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_struct(Snapshots)4070_storage)",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:57"
          },
          {
            "label": "_totalSupplySnapshots",
            "offset": 0,
            "slot": "102",
            "type": "t_struct(Snapshots)4070_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:58"
          },
          {
            "label": "_currentSnapshotId",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(Counter)6341_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC20SnapshotUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol:203"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1921_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)6341_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)6341_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Snapshots)4070_storage)": {
            "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1921_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)6341_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1921_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Snapshots)4070_storage": {
            "label": "struct ERC20SnapshotUpgradeable.Snapshots",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "0fbf1af48a86482cb7ec0d212f1cf9bc80273206481c2685adb0288fefed8154": {
      "address": "0x2b069257E9c5b07e55b3A7538DBc89FAB4Df10E8",
      "txHash": "0x53c341a24470702b71b89b21525f82ea5f79d03e6e62a5aad50eb62eae293e39",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "53",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "159",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "253",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1921_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "304",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "403",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "453",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_guardians",
            "offset": 0,
            "slot": "503",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "BionicInvestorPass",
            "src": "contracts/BIP.sol:34"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "504",
            "type": "t_struct(Counter)6341_storage",
            "contract": "BionicInvestorPass",
            "src": "contracts/BIP.sol:42"
          },
          {
            "label": "platformFeeRecipient",
            "offset": 0,
            "slot": "505",
            "type": "t_address",
            "contract": "BionicInvestorPass",
            "src": "contracts/BIP.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1921_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)6341_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)1921_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "a66a7e8dfc6f94ed60a74e6c52631f048fab3a6ee115ba8fc6438a46da76c008": {
      "address": "0x9546Ce89BB18aCd1Ee0ae649A5ba051459310866",
      "txHash": "0x10aba934054371c122a5adb85e4f5a7b2416755ad7a9f45679ab97ae4788a74c",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "vrfCoordinator",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts/libs/VRFConsumerBaseV2Upgradable.sol:100"
          },
          {
            "label": "_vrfCoordinator",
            "offset": 0,
            "slot": "52",
            "type": "t_contract(VRFCoordinatorV2Interface)1056",
            "contract": "Raffle",
            "src": "contracts/Launchpad/Raffle.sol:48"
          },
          {
            "label": "_subscriptionId",
            "offset": 20,
            "slot": "52",
            "type": "t_uint64",
            "contract": "Raffle",
            "src": "contracts/Launchpad/Raffle.sol:49"
          },
          {
            "label": "_gasLane",
            "offset": 0,
            "slot": "53",
            "type": "t_bytes32",
            "contract": "Raffle",
            "src": "contracts/Launchpad/Raffle.sol:50"
          },
          {
            "label": "_requestVRFPerWinner",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "Raffle",
            "src": "contracts/Launchpad/Raffle.sol:54"
          },
          {
            "label": "poolIdToRequestId",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Raffle",
            "src": "contracts/Launchpad/Raffle.sol:57"
          },
          {
            "label": "requestIdToPoolId",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Raffle",
            "src": "contracts/Launchpad/Raffle.sol:58"
          },
          {
            "label": "poolIdToTiers",
            "offset": 0,
            "slot": "57",
            "type": "t_mapping(t_uint256,t_array(t_struct(Tier)14712_storage)dyn_storage)",
            "contract": "Raffle",
            "src": "contracts/Launchpad/Raffle.sol:60"
          },
          {
            "label": "poolLotteryWinners",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)10691_storage)",
            "contract": "Raffle",
            "src": "contracts/Launchpad/Raffle.sol:63"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "59",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "109",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1080_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "259",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "309",
            "type": "t_contract(IERC20)5005",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:82"
          },
          {
            "label": "investingToken",
            "offset": 0,
            "slot": "310",
            "type": "t_contract(IERC20)5005",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:85"
          },
          {
            "label": "bionicInvestorPass",
            "offset": 0,
            "slot": "311",
            "type": "t_address",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:88"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "312",
            "type": "t_contract(Treasury)14669",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:89"
          },
          {
            "label": "poolInfo",
            "offset": 0,
            "slot": "313",
            "type": "t_mapping(t_uint256,t_struct(PoolInfo)14698_storage)",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:91"
          },
          {
            "label": "poolIdToLastPercentageAllocTime",
            "offset": 0,
            "slot": "314",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:92"
          },
          {
            "label": "poolIdToTotalStaked",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:94"
          },
          {
            "label": "userPledge",
            "offset": 0,
            "slot": "316",
            "type": "t_mapping(t_uint256,t_struct(AddressToUintMap)9873_storage)",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:97"
          },
          {
            "label": "userTotalPledge",
            "offset": 0,
            "slot": "317",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:101"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(PledgeTier)14705_storage)dyn_storage": {
            "label": "struct BionicStructs.PledgeTier[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Tier)14712_storage)dyn_storage": {
            "label": "struct BionicStructs.Tier[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)5005": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(Treasury)14669": {
            "label": "contract Treasury",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)1056": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1080_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Tier)14712_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct BionicStructs.Tier[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)10691_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AddressToUintMap)9873_storage)": {
            "label": "mapping(uint256 => struct EnumerableMap.AddressToUintMap)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PoolInfo)14698_storage)": {
            "label": "mapping(uint256 => struct BionicStructs.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)10691_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10376_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(AddressToUintMap)9873_storage": {
            "label": "struct EnumerableMap.AddressToUintMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Bytes32ToBytes32Map)9123_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Bytes32Set)10570_storage": {
            "label": "struct EnumerableSet.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10376_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bytes32ToBytes32Map)9123_storage": {
            "label": "struct EnumerableMap.Bytes32ToBytes32Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)10570_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PledgeTier)14705_storage": {
            "label": "struct BionicStructs.PledgeTier",
            "members": [
              {
                "label": "tierId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minimumPledge",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumPledge",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PoolInfo)14698_storage": {
            "label": "struct BionicStructs.PoolInfo",
            "members": [
              {
                "label": "pledgingStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pledgingEndTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenAllocationPerMonth",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAllocationStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAllocationMonthCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "targetRaise",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "winnersCount",
                "type": "t_uint32",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "useRaffle",
                "type": "t_bool",
                "offset": 4,
                "slot": "6"
              },
              {
                "label": "pledgeTiers",
                "type": "t_array(t_struct(PledgeTier)14705_storage)dyn_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(RoleData)1080_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)10376_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Tier)14712_storage": {
            "label": "struct BionicStructs.Tier",
            "members": [
              {
                "label": "count",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "f6b7d839b234d7ecfe945581ac78b1b4d3a069c6ce96a8ec7a09f2ce190576d9": {
      "address": "0xf6e470B6A6433880a97f80e7a841644237518259",
      "txHash": "0xa0f26c9897dd96c03f8bc7861b67ea914aa31055f2b180085eb0444a8b747df5",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "vrfCoordinator",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "VRFConsumerBaseV2Upgradeable",
            "src": "contracts/libs/VRFConsumerBaseV2Upgradable.sol:100"
          },
          {
            "label": "_vrfCoordinator",
            "offset": 0,
            "slot": "52",
            "type": "t_contract(VRFCoordinatorV2Interface)1056",
            "contract": "Raffle",
            "src": "contracts/Launchpad/Raffle.sol:48"
          },
          {
            "label": "_subscriptionId",
            "offset": 20,
            "slot": "52",
            "type": "t_uint64",
            "contract": "Raffle",
            "src": "contracts/Launchpad/Raffle.sol:49"
          },
          {
            "label": "_gasLane",
            "offset": 0,
            "slot": "53",
            "type": "t_bytes32",
            "contract": "Raffle",
            "src": "contracts/Launchpad/Raffle.sol:50"
          },
          {
            "label": "_requestVRFPerWinner",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "Raffle",
            "src": "contracts/Launchpad/Raffle.sol:54"
          },
          {
            "label": "poolIdToRequestId",
            "offset": 0,
            "slot": "55",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Raffle",
            "src": "contracts/Launchpad/Raffle.sol:57"
          },
          {
            "label": "requestIdToPoolId",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Raffle",
            "src": "contracts/Launchpad/Raffle.sol:58"
          },
          {
            "label": "poolIdToTiers",
            "offset": 0,
            "slot": "57",
            "type": "t_mapping(t_uint256,t_array(t_struct(Tier)14817_storage)dyn_storage)",
            "contract": "Raffle",
            "src": "contracts/Launchpad/Raffle.sol:60"
          },
          {
            "label": "poolLotteryWinners",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)10691_storage)",
            "contract": "Raffle",
            "src": "contracts/Launchpad/Raffle.sol:63"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "59",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "109",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1080_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "259",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "309",
            "type": "t_contract(IERC20)5005",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:83"
          },
          {
            "label": "investingToken",
            "offset": 0,
            "slot": "310",
            "type": "t_contract(IERC20)5005",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:87"
          },
          {
            "label": "bionicInvestorPass",
            "offset": 0,
            "slot": "311",
            "type": "t_address",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:90"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "312",
            "type": "t_contract(Treasury)14775",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:91"
          },
          {
            "label": "treasuryWithdrawable",
            "offset": 0,
            "slot": "313",
            "type": "t_uint256",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:92"
          },
          {
            "label": "poolInfo",
            "offset": 0,
            "slot": "314",
            "type": "t_mapping(t_uint256,t_struct(PoolInfo)14803_storage)",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:93"
          },
          {
            "label": "poolIdToTotalPledged",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:94"
          },
          {
            "label": "userPledge",
            "offset": 0,
            "slot": "316",
            "type": "t_mapping(t_uint256,t_struct(AddressToUintMap)9873_storage)",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:98"
          },
          {
            "label": "userTotalPledge",
            "offset": 0,
            "slot": "317",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:102"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(PledgeTier)14810_storage)dyn_storage": {
            "label": "struct BionicStructs.PledgeTier[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Tier)14817_storage)dyn_storage": {
            "label": "struct BionicStructs.Tier[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)5005": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(Treasury)14775": {
            "label": "contract Treasury",
            "numberOfBytes": "20"
          },
          "t_contract(VRFCoordinatorV2Interface)1056": {
            "label": "contract VRFCoordinatorV2Interface",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1080_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(Tier)14817_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct BionicStructs.Tier[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)10691_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AddressToUintMap)9873_storage)": {
            "label": "mapping(uint256 => struct EnumerableMap.AddressToUintMap)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PoolInfo)14803_storage)": {
            "label": "mapping(uint256 => struct BionicStructs.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)10691_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10376_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(AddressToUintMap)9873_storage": {
            "label": "struct EnumerableMap.AddressToUintMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Bytes32ToBytes32Map)9123_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Bytes32Set)10570_storage": {
            "label": "struct EnumerableSet.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10376_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bytes32ToBytes32Map)9123_storage": {
            "label": "struct EnumerableMap.Bytes32ToBytes32Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)10570_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PledgeTier)14810_storage": {
            "label": "struct BionicStructs.PledgeTier",
            "members": [
              {
                "label": "tierId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minimumPledge",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumPledge",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PoolInfo)14803_storage": {
            "label": "struct BionicStructs.PoolInfo",
            "members": [
              {
                "label": "pledgingStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pledgingEndTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenAllocationPerMonth",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAllocationStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAllocationMonthCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "targetRaise",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "winnersCount",
                "type": "t_uint32",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "useRaffle",
                "type": "t_bool",
                "offset": 4,
                "slot": "6"
              },
              {
                "label": "pledgeTiers",
                "type": "t_array(t_struct(PledgeTier)14810_storage)dyn_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(RoleData)1080_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)10376_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Tier)14817_storage": {
            "label": "struct BionicStructs.Tier",
            "members": [
              {
                "label": "count",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "0b1e8b1b97924973cb1d7cb2bc489e213fca5eebab45a38d16d29db7e4b2f423": {
      "address": "0x3103108f9fd0FD8f8439297bf20357b05Ba450C0",
      "txHash": "0xc9462a3cfaa3315f2ec4d43b02169758b13306479ae7662955d1b92673f4609d",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)984_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "301",
            "type": "t_contract(IERC20)4909",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:81"
          },
          {
            "label": "investingToken",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(IERC20)4909",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:85"
          },
          {
            "label": "bionicInvestorPass",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:88"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "304",
            "type": "t_contract(Treasury)13613",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:89"
          },
          {
            "label": "treasuryWithdrawable",
            "offset": 0,
            "slot": "305",
            "type": "t_uint256",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:90"
          },
          {
            "label": "poolInfo",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_struct(PoolInfo)13641_storage)",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:91"
          },
          {
            "label": "poolIdToTotalPledged",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:92"
          },
          {
            "label": "userPledge",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_struct(AddressToUintMap)9777_storage)",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:96"
          },
          {
            "label": "userTotalPledge",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:100"
          },
          {
            "label": "poolLotteryWinners",
            "offset": 0,
            "slot": "310",
            "type": "t_mapping(t_uint256,t_struct(AddressSet)10595_storage)",
            "contract": "BionicPoolRegistry",
            "src": "contracts/Launchpad/BionicPoolRegistry.sol:101"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(PledgeTier)13648_storage)dyn_storage": {
            "label": "struct BionicStructs.PledgeTier[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)4909": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(Treasury)13613": {
            "label": "contract Treasury",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)984_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AddressSet)10595_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AddressToUintMap)9777_storage)": {
            "label": "mapping(uint256 => struct EnumerableMap.AddressToUintMap)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PoolInfo)13641_storage)": {
            "label": "mapping(uint256 => struct BionicStructs.PoolInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)10595_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10280_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(AddressToUintMap)9777_storage": {
            "label": "struct EnumerableMap.AddressToUintMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Bytes32ToBytes32Map)9027_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Bytes32Set)10474_storage": {
            "label": "struct EnumerableSet.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10280_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Bytes32ToBytes32Map)9027_storage": {
            "label": "struct EnumerableMap.Bytes32ToBytes32Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)10474_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_bytes32)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PledgeTier)13648_storage": {
            "label": "struct BionicStructs.PledgeTier",
            "members": [
              {
                "label": "tierId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minimumPledge",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maximumPledge",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PoolInfo)13641_storage": {
            "label": "struct BionicStructs.PoolInfo",
            "members": [
              {
                "label": "pledgingStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pledgingEndTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenAllocationPerMonth",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAllocationStartTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "tokenAllocationMonthCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "targetRaise",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "winnersCount",
                "type": "t_uint32",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "useRaffle",
                "type": "t_bool",
                "offset": 4,
                "slot": "6"
              },
              {
                "label": "pledgeTiers",
                "type": "t_array(t_struct(PledgeTier)13648_storage)dyn_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(RoleData)984_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)10280_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "bf66749bf7f5dabb58a0b63aa882adca6b545e2066c74e1b6737d445cf293174": {
      "address": "0xaF91c957da768Bf782702bB822615F88A01bc310",
      "txHash": "0x3e09be873be5d4807939560118aef178960222bfb40702507cd8bd128ab72a01",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "s_userClaims",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "BionicTokenDistributor",
            "src": "contracts/Launchpad/BionicTokenDistributor.sol:63"
          },
          {
            "label": "s_projectTokens",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_uint256,t_struct(ProjectToken)12730_storage)",
            "contract": "BionicTokenDistributor",
            "src": "contracts/Launchpad/BionicTokenDistributor.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)5363": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProjectToken)12730_storage)": {
            "label": "mapping(uint256 => struct BionicTokenDistributor.ProjectToken)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProjectToken)12730_storage": {
            "label": "struct BionicTokenDistributor.ProjectToken",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IERC20)5363",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "monthQuota",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalCycles",
                "type": "t_uint64",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "merkleRoot",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
