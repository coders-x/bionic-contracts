{
  "_format": "ethers-rs-sol-cache-3",
  "paths": {
    "artifacts": "out",
    "build_infos": "out/build-info",
    "sources": "contracts",
    "tests": "test",
    "scripts": "script",
    "libraries": [
      "lib",
      "node_modules"
    ]
  },
  "files": {
    "contracts/BIP.sol": {
      "lastModificationDate": 1691406669875,
      "contentHash": "121d60ed80344874fee597e31e4c93b8",
      "sourceName": "contracts/BIP.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC4906Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
        "node_modules/@thirdweb-dev/contracts/eip/interface/IERC20.sol",
        "node_modules/@thirdweb-dev/contracts/extension/BatchMintMetadata.sol",
        "node_modules/@thirdweb-dev/contracts/extension/DropSinglePhase.sol",
        "node_modules/@thirdweb-dev/contracts/extension/LazyMint.sol",
        "node_modules/@thirdweb-dev/contracts/extension/interface/IClaimCondition.sol",
        "node_modules/@thirdweb-dev/contracts/extension/interface/IDropSinglePhase.sol",
        "node_modules/@thirdweb-dev/contracts/extension/interface/ILazyMint.sol",
        "node_modules/@thirdweb-dev/contracts/interfaces/IWETH.sol",
        "node_modules/@thirdweb-dev/contracts/lib/CurrencyTransferLib.sol",
        "node_modules/@thirdweb-dev/contracts/lib/MerkleProof.sol",
        "node_modules/@thirdweb-dev/contracts/lib/TWAddress.sol",
        "node_modules/@thirdweb-dev/contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol"
      ],
      "versionRequirement": ">=0.7.0, <0.9.0",
      "artifacts": {
        "BionicInvestorPass": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "BIP.sol/BionicInvestorPass.json"
        }
      }
    },
    "contracts/Bionic.sol": {
      "lastModificationDate": 1688971019520,
      "contentHash": "435c18cfa6ff11d9709d5f187c2717b6",
      "sourceName": "contracts/Bionic.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol"
      ],
      "versionRequirement": ">=0.7.0, <0.9.0",
      "artifacts": {
        "Bionic": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Bionic.sol/Bionic.json"
        }
      }
    },
    "contracts/Launcpad/FundRaisingGuild.sol": {
      "lastModificationDate": 1692098418602,
      "contentHash": "18037090fa9d72e9cc3e58686e740c0e",
      "sourceName": "contracts/Launcpad/FundRaisingGuild.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol"
      ],
      "versionRequirement": ">=0.7.0, <0.9.0",
      "artifacts": {
        "FundRaisingGuild": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "FundRaisingGuild.sol/FundRaisingGuild.json"
        }
      }
    },
    "contracts/Launcpad/Raffle.sol": {
      "lastModificationDate": 1692176114056,
      "contentHash": "ab04ddafe9c77967dddb095a27dd8897",
      "sourceName": "contracts/Launcpad/Raffle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol"
      ],
      "versionRequirement": ">=0.7.0, <0.9.0",
      "artifacts": {
        "Raffle": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Raffle.sol/Raffle.json"
        }
      }
    },
    "contracts/Launcpad/fundWithVesting.sol": {
      "lastModificationDate": 1692176135668,
      "contentHash": "7fee397f04a404ace62aed0fe0ac2d8d",
      "sourceName": "contracts/Launcpad/fundWithVesting.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/Launcpad/FundRaisingGuild.sol",
        "contracts/TBA.sol",
        "contracts/libs/Account.sol",
        "contracts/libs/BionicStructs.sol",
        "contracts/libs/ICurrencyPermit.sol",
        "contracts/libs/IterableMapping.sol",
        "contracts/reference/src/interfaces/IERC6551Account.sol",
        "contracts/reference/src/lib/ERC6551AccountLib.sol",
        "contracts/reference/src/lib/ERC6551BytecodeLib.sol",
        "node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
        "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol",
        "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Counters.sol",
        "node_modules/@openzeppelin/contracts/utils/Create2.sol",
        "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/@thirdweb-dev/contracts/dynamic-contracts/extension/ContractMetadata.sol",
        "node_modules/@thirdweb-dev/contracts/dynamic-contracts/extension/Initializable.sol",
        "node_modules/@thirdweb-dev/contracts/eip/ERC1271.sol",
        "node_modules/@thirdweb-dev/contracts/extension/Multicall.sol",
        "node_modules/@thirdweb-dev/contracts/extension/interface/IAccountPermissions.sol",
        "node_modules/@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol",
        "node_modules/@thirdweb-dev/contracts/extension/interface/IMulticall.sol",
        "node_modules/@thirdweb-dev/contracts/lib/BytesLib.sol",
        "node_modules/@thirdweb-dev/contracts/lib/TWAddress.sol",
        "node_modules/@thirdweb-dev/contracts/openzeppelin-presets/proxy/Clones.sol",
        "node_modules/@thirdweb-dev/contracts/openzeppelin-presets/utils/structs/EnumerableSet.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAccount.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAccountFactory.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAggregator.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IEntrypoint.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/INonceManager.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IStakeManager.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/BaseAccount.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/BaseAccountFactory.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/Helpers.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/UserOperation.sol"
      ],
      "versionRequirement": ">=0.7.0, <0.9.0",
      "artifacts": {
        "LaunchPoolFundRaisingWithVesting": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "fundWithVesting.sol/LaunchPoolFundRaisingWithVesting.json"
        }
      }
    },
    "contracts/TBA.sol": {
      "lastModificationDate": 1692098347050,
      "contentHash": "2784bfa28620f5e0a0f12c69d6f1d69c",
      "sourceName": "contracts/TBA.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/libs/Account.sol",
        "contracts/libs/ICurrencyPermit.sol",
        "contracts/reference/src/interfaces/IERC6551Account.sol",
        "contracts/reference/src/lib/ERC6551AccountLib.sol",
        "contracts/reference/src/lib/ERC6551BytecodeLib.sol",
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol",
        "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Counters.sol",
        "node_modules/@openzeppelin/contracts/utils/Create2.sol",
        "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/@thirdweb-dev/contracts/dynamic-contracts/extension/ContractMetadata.sol",
        "node_modules/@thirdweb-dev/contracts/dynamic-contracts/extension/Initializable.sol",
        "node_modules/@thirdweb-dev/contracts/eip/ERC1271.sol",
        "node_modules/@thirdweb-dev/contracts/extension/Multicall.sol",
        "node_modules/@thirdweb-dev/contracts/extension/interface/IAccountPermissions.sol",
        "node_modules/@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol",
        "node_modules/@thirdweb-dev/contracts/extension/interface/IMulticall.sol",
        "node_modules/@thirdweb-dev/contracts/lib/BytesLib.sol",
        "node_modules/@thirdweb-dev/contracts/lib/TWAddress.sol",
        "node_modules/@thirdweb-dev/contracts/openzeppelin-presets/proxy/Clones.sol",
        "node_modules/@thirdweb-dev/contracts/openzeppelin-presets/utils/structs/EnumerableSet.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAccount.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAccountFactory.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAggregator.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IEntrypoint.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/INonceManager.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IStakeManager.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/BaseAccount.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/BaseAccountFactory.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/Helpers.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/UserOperation.sol"
      ],
      "versionRequirement": ">=0.7.0, <0.9.0",
      "artifacts": {
        "TokenBoundAccount": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "TBA.sol/TokenBoundAccount.json"
        }
      }
    },
    "contracts/libs/Account.sol": {
      "lastModificationDate": 1692097873900,
      "contentHash": "bee88c2827ee58f85325fa5d30644de3",
      "sourceName": "contracts/libs/Account.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol",
        "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
        "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
        "node_modules/@thirdweb-dev/contracts/dynamic-contracts/extension/ContractMetadata.sol",
        "node_modules/@thirdweb-dev/contracts/dynamic-contracts/extension/Initializable.sol",
        "node_modules/@thirdweb-dev/contracts/eip/ERC1271.sol",
        "node_modules/@thirdweb-dev/contracts/extension/Multicall.sol",
        "node_modules/@thirdweb-dev/contracts/extension/interface/IAccountPermissions.sol",
        "node_modules/@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol",
        "node_modules/@thirdweb-dev/contracts/extension/interface/IMulticall.sol",
        "node_modules/@thirdweb-dev/contracts/lib/BytesLib.sol",
        "node_modules/@thirdweb-dev/contracts/lib/TWAddress.sol",
        "node_modules/@thirdweb-dev/contracts/openzeppelin-presets/proxy/Clones.sol",
        "node_modules/@thirdweb-dev/contracts/openzeppelin-presets/utils/structs/EnumerableSet.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAccount.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAccountFactory.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAggregator.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IEntrypoint.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/INonceManager.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IStakeManager.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/BaseAccount.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/BaseAccountFactory.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/Helpers.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/UserOperation.sol"
      ],
      "versionRequirement": ">=0.7.0, <0.9.0",
      "artifacts": {
        "Account": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Account.sol/Account.json"
        }
      }
    },
    "contracts/libs/BionicStructs.sol": {
      "lastModificationDate": 1692097900636,
      "contentHash": "a35c7d0a4a6a01a556f31dd8d142c943",
      "sourceName": "contracts/libs/BionicStructs.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": ">=0.7.0, <0.9.0",
      "artifacts": {
        "BionicStructs": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "BionicStructs.sol/BionicStructs.json"
        }
      }
    },
    "contracts/libs/CurrencyPermit.sol": {
      "lastModificationDate": 1691406669875,
      "contentHash": "fa8863bf9597f857700c24650a4b31bc",
      "sourceName": "contracts/libs/CurrencyPermit.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.7.0, <0.9.0",
      "artifacts": {
        "CurrencyPermit": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "CurrencyPermit.sol/CurrencyPermit.json"
        }
      }
    },
    "contracts/libs/CurrencyPermitUpgradable.sol": {
      "lastModificationDate": 1691406669875,
      "contentHash": "3a755cea675cd6fbefcb4d65c99c3d80",
      "sourceName": "contracts/libs/CurrencyPermitUpgradable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.7.0, <0.9.0",
      "artifacts": {
        "CurrencyPermitUpgradable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "CurrencyPermitUpgradable.sol/CurrencyPermitUpgradable.json"
        }
      }
    },
    "contracts/libs/ICurrencyPermit.sol": {
      "lastModificationDate": 1692097900636,
      "contentHash": "207dfd8ff0bd7eb72213d7e0f417b829",
      "sourceName": "contracts/libs/ICurrencyPermit.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.7.0, <0.9.0",
      "artifacts": {
        "ICurrencyPermit": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ICurrencyPermit.sol/ICurrencyPermit.json"
        }
      }
    },
    "contracts/libs/IterableMapping.sol": {
      "lastModificationDate": 1691406669879,
      "contentHash": "37e8e1f33c60bb5ef9c4002a12c978b2",
      "sourceName": "contracts/libs/IterableMapping.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/libs/BionicStructs.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": ">=0.7.0, <0.9.0",
      "artifacts": {
        "IterableMapping": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IterableMapping.sol/IterableMapping.json"
        },
        "TestIterableMap": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IterableMapping.sol/TestIterableMap.json"
        }
      }
    },
    "contracts/libs/VRFCoordinatorV2Mock.sol": {
      "lastModificationDate": 1692097900636,
      "contentHash": "781f5040bfc9e86f44df59cf8c092d68",
      "sourceName": "contracts/libs/VRFCoordinatorV2Mock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol",
        "node_modules/@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "VRFCoordinatorV2Mock": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "VRFCoordinatorV2Mock.sol/VRFCoordinatorV2Mock.json"
        }
      }
    },
    "contracts/reference/script/ComputeRegistryAddress.s.sol": {
      "lastModificationDate": 1690621191262,
      "contentHash": "6426b3aaba005858fdd6346e7441085f",
      "sourceName": "contracts/reference/script/ComputeRegistryAddress.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/reference/src/ERC6551Registry.sol",
        "contracts/reference/src/interfaces/IERC6551Registry.sol",
        "contracts/reference/src/lib/ERC6551BytecodeLib.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "node_modules/@openzeppelin/contracts/utils/Create2.sol"
      ],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "ComputeRegistryAddress": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ComputeRegistryAddress.s.sol/ComputeRegistryAddress.json"
        }
      }
    },
    "contracts/reference/script/DeployRegistry.s.sol": {
      "lastModificationDate": 1690621191262,
      "contentHash": "ebfa0077191c8154031527335d531fb0",
      "sourceName": "contracts/reference/script/DeployRegistry.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/reference/src/ERC6551Registry.sol",
        "contracts/reference/src/interfaces/IERC6551Registry.sol",
        "contracts/reference/src/lib/ERC6551BytecodeLib.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "node_modules/@openzeppelin/contracts/utils/Create2.sol"
      ],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "DeployRegistry": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "DeployRegistry.s.sol/DeployRegistry.json"
        }
      }
    },
    "contracts/reference/src/ERC6551Registry.sol": {
      "lastModificationDate": 1690621191262,
      "contentHash": "195f7671157c2d4ff3b7e75c4e945bb6",
      "sourceName": "contracts/reference/src/ERC6551Registry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/reference/src/interfaces/IERC6551Registry.sol",
        "contracts/reference/src/lib/ERC6551BytecodeLib.sol",
        "node_modules/@openzeppelin/contracts/utils/Create2.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC6551Registry": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC6551Registry.sol/ERC6551Registry.json"
        }
      }
    },
    "contracts/reference/src/examples/simple/SimpleERC6551Account.sol": {
      "lastModificationDate": 1690621191262,
      "contentHash": "df4f29cd528748cedac89e43aef8db5a",
      "sourceName": "contracts/reference/src/examples/simple/SimpleERC6551Account.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/reference/src/interfaces/IERC6551Account.sol",
        "contracts/reference/src/lib/ERC6551AccountLib.sol",
        "contracts/reference/src/lib/ERC6551BytecodeLib.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC1271.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/utils/Create2.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SimpleERC6551Account": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SimpleERC6551Account.sol/SimpleERC6551Account.json"
        }
      }
    },
    "contracts/reference/src/examples/upgradeable/ERC6551AccountProxy.sol": {
      "lastModificationDate": 1690621191262,
      "contentHash": "930dc6aeba0387e4728756102734d8bd",
      "sourceName": "contracts/reference/src/examples/upgradeable/ERC6551AccountProxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC6551AccountProxy": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC6551AccountProxy.sol/ERC6551AccountProxy.json"
        }
      }
    },
    "contracts/reference/src/examples/upgradeable/ERC6551AccountUpgradeable.sol": {
      "lastModificationDate": 1690621191262,
      "contentHash": "db6fcc353c1e269ffa312f2caf510b5f",
      "sourceName": "contracts/reference/src/examples/upgradeable/ERC6551AccountUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/reference/src/interfaces/IERC6551Account.sol",
        "contracts/reference/src/lib/ERC6551AccountLib.sol",
        "contracts/reference/src/lib/ERC6551BytecodeLib.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC1271.sol",
        "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/utils/Create2.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC6551AccountUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC6551AccountUpgradeable.sol/ERC6551AccountUpgradeable.json"
        }
      }
    },
    "contracts/reference/src/interfaces/IERC6551Account.sol": {
      "lastModificationDate": 1690621191262,
      "contentHash": "833baba9ade640876435941f7aacba38",
      "sourceName": "contracts/reference/src/interfaces/IERC6551Account.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC6551Account": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC6551Account.sol/IERC6551Account.json"
        },
        "IERC6551AccountProxy": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC6551Account.sol/IERC6551AccountProxy.json"
        }
      }
    },
    "contracts/reference/src/interfaces/IERC6551Registry.sol": {
      "lastModificationDate": 1690621191262,
      "contentHash": "3c8807042303c577650bcded84e50e5e",
      "sourceName": "contracts/reference/src/interfaces/IERC6551Registry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC6551Registry": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC6551Registry.sol/IERC6551Registry.json"
        }
      }
    },
    "contracts/reference/src/lib/ERC6551AccountLib.sol": {
      "lastModificationDate": 1690621191262,
      "contentHash": "49be35536641f3ebc26b1f84922b3938",
      "sourceName": "contracts/reference/src/lib/ERC6551AccountLib.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/reference/src/lib/ERC6551BytecodeLib.sol",
        "node_modules/@openzeppelin/contracts/utils/Create2.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC6551AccountLib": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC6551AccountLib.sol/ERC6551AccountLib.json"
        }
      }
    },
    "contracts/reference/src/lib/ERC6551BytecodeLib.sol": {
      "lastModificationDate": 1690621191262,
      "contentHash": "b3d1790aed846a891e815c82167288fb",
      "sourceName": "contracts/reference/src/lib/ERC6551BytecodeLib.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC6551BytecodeLib": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC6551BytecodeLib.sol/ERC6551BytecodeLib.json"
        }
      }
    },
    "contracts/reference/test/ERC6551Registry.t.sol": {
      "lastModificationDate": 1690621191262,
      "contentHash": "abacf2ff0242527306defbfdf87b203b",
      "sourceName": "contracts/reference/test/ERC6551Registry.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/reference/src/ERC6551Registry.sol",
        "contracts/reference/src/interfaces/IERC6551Account.sol",
        "contracts/reference/src/interfaces/IERC6551Registry.sol",
        "contracts/reference/src/lib/ERC6551AccountLib.sol",
        "contracts/reference/src/lib/ERC6551BytecodeLib.sol",
        "contracts/reference/test/mocks/MockERC6551Account.sol",
        "contracts/reference/test/mocks/MockERC721.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Create2.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "RegistryTest": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC6551Registry.t.sol/RegistryTest.json"
        }
      }
    },
    "contracts/reference/test/examples/simple/SimpleERC6551Account.t.sol": {
      "lastModificationDate": 1690621191262,
      "contentHash": "c504e56e3c410d9ca85d5d9b6cad0c7c",
      "sourceName": "contracts/reference/test/examples/simple/SimpleERC6551Account.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/reference/src/ERC6551Registry.sol",
        "contracts/reference/src/examples/simple/SimpleERC6551Account.sol",
        "contracts/reference/src/interfaces/IERC6551Account.sol",
        "contracts/reference/src/interfaces/IERC6551Registry.sol",
        "contracts/reference/src/lib/ERC6551AccountLib.sol",
        "contracts/reference/src/lib/ERC6551BytecodeLib.sol",
        "contracts/reference/test/mocks/MockERC6551Account.sol",
        "contracts/reference/test/mocks/MockERC721.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC1271.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Create2.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AccountTest": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SimpleERC6551Account.t.sol/AccountTest.json"
        }
      }
    },
    "contracts/reference/test/examples/upgradeable/ERC6551AccountUpgradeable.t.sol": {
      "lastModificationDate": 1690621191262,
      "contentHash": "514d4d8632b2890fdb31aadb5fa8d272",
      "sourceName": "contracts/reference/test/examples/upgradeable/ERC6551AccountUpgradeable.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/reference/src/ERC6551Registry.sol",
        "contracts/reference/src/examples/upgradeable/ERC6551AccountProxy.sol",
        "contracts/reference/src/examples/upgradeable/ERC6551AccountUpgradeable.sol",
        "contracts/reference/src/interfaces/IERC6551Account.sol",
        "contracts/reference/src/interfaces/IERC6551Registry.sol",
        "contracts/reference/src/lib/ERC6551AccountLib.sol",
        "contracts/reference/src/lib/ERC6551BytecodeLib.sol",
        "contracts/reference/test/mocks/MockERC1155.sol",
        "contracts/reference/test/mocks/MockERC6551Account.sol",
        "contracts/reference/test/mocks/MockERC721.sol",
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC1271.sol",
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
        "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Create2.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AccountProxyTest": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC6551AccountUpgradeable.t.sol/AccountProxyTest.json"
        }
      }
    },
    "contracts/reference/test/mocks/MockERC1155.sol": {
      "lastModificationDate": 1690621191262,
      "contentHash": "2e857823b2bd923fac033dca824a08af",
      "sourceName": "contracts/reference/test/mocks/MockERC1155.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
        "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "MockERC1155": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "MockERC1155.sol/MockERC1155.json"
        }
      }
    },
    "contracts/reference/test/mocks/MockERC6551Account.sol": {
      "lastModificationDate": 1690621191262,
      "contentHash": "321b1bf14c0d669b72065ca4df2868a5",
      "sourceName": "contracts/reference/test/mocks/MockERC6551Account.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/reference/src/interfaces/IERC6551Account.sol",
        "contracts/reference/src/lib/ERC6551AccountLib.sol",
        "contracts/reference/src/lib/ERC6551BytecodeLib.sol",
        "node_modules/@openzeppelin/contracts/utils/Create2.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "MockERC6551Account": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "MockERC6551Account.sol/MockERC6551Account.json"
        }
      }
    },
    "contracts/reference/test/mocks/MockERC721.sol": {
      "lastModificationDate": 1690621191262,
      "contentHash": "d2a5f756e9501464ba9cbda8587183d7",
      "sourceName": "contracts/reference/test/mocks/MockERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "MockERC721": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "MockERC721.sol/MockERC721.json"
        }
      }
    },
    "lib/forge-std/lib/ds-test/src/test.sol": {
      "lastModificationDate": 1690621291785,
      "contentHash": "9febff9d09f18af5306669dc276c4c43",
      "sourceName": "lib/forge-std/lib/ds-test/src/test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "DSTest": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "test.sol/DSTest.json"
        }
      }
    },
    "lib/forge-std/src/Base.sol": {
      "lastModificationDate": 1690621291073,
      "contentHash": "ee13c050b1914464f1d3f90cde90204b",
      "sourceName": "lib/forge-std/src/Base.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "CommonBase": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Base.sol/CommonBase.json"
        },
        "ScriptBase": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Base.sol/ScriptBase.json"
        },
        "TestBase": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Base.sol/TestBase.json"
        }
      }
    },
    "lib/forge-std/src/Script.sol": {
      "lastModificationDate": 1690621291797,
      "contentHash": "a8896f13ebff9ed23cce0fcb7f8f1984",
      "sourceName": "lib/forge-std/src/Script.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Script": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Script.sol/Script.json"
        }
      }
    },
    "lib/forge-std/src/StdAssertions.sol": {
      "lastModificationDate": 1690621291073,
      "contentHash": "6cc2858240bcd443debbbf075490e325",
      "sourceName": "lib/forge-std/src/StdAssertions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/StdMath.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdAssertions": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdAssertions.sol/StdAssertions.json"
        }
      }
    },
    "lib/forge-std/src/StdChains.sol": {
      "lastModificationDate": 1690621291073,
      "contentHash": "aff0685683a41d8e314d64aef646fe6f",
      "sourceName": "lib/forge-std/src/StdChains.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdChains": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdChains.sol/StdChains.json"
        }
      }
    },
    "lib/forge-std/src/StdCheats.sol": {
      "lastModificationDate": 1690621291073,
      "contentHash": "27745bb24c5568c75c3043277ee18bcb",
      "sourceName": "lib/forge-std/src/StdCheats.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdCheats": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdCheats.sol/StdCheats.json"
        },
        "StdCheatsSafe": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdCheats.sol/StdCheatsSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdError.sol": {
      "lastModificationDate": 1690621291073,
      "contentHash": "64c896e1276a291776e5ea5aecb3870a",
      "sourceName": "lib/forge-std/src/StdError.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdError": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdError.sol/stdError.json"
        }
      }
    },
    "lib/forge-std/src/StdInvariant.sol": {
      "lastModificationDate": 1690621291073,
      "contentHash": "6d12d54c05754ad4e03066726dca3a84",
      "sourceName": "lib/forge-std/src/StdInvariant.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdInvariant": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdInvariant.sol/StdInvariant.json"
        }
      }
    },
    "lib/forge-std/src/StdJson.sol": {
      "lastModificationDate": 1690621291073,
      "contentHash": "2e1d13674e152408867795362d833c24",
      "sourceName": "lib/forge-std/src/StdJson.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "stdJson": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdJson.sol/stdJson.json"
        }
      }
    },
    "lib/forge-std/src/StdMath.sol": {
      "lastModificationDate": 1690621291073,
      "contentHash": "9da8f453eba6bb98f3d75bc6822bfb29",
      "sourceName": "lib/forge-std/src/StdMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdMath": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdMath.sol/stdMath.json"
        }
      }
    },
    "lib/forge-std/src/StdStorage.sol": {
      "lastModificationDate": 1690621291073,
      "contentHash": "4fc0ff0cb196a405e5a4c9fa1c6acccb",
      "sourceName": "lib/forge-std/src/StdStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdStorage": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdStorage.sol/stdStorage.json"
        },
        "stdStorageSafe": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdStorage.sol/stdStorageSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdStyle.sol": {
      "lastModificationDate": 1690621291073,
      "contentHash": "6281165a12aa639705c691fccefd855e",
      "sourceName": "lib/forge-std/src/StdStyle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "StdStyle": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdStyle.sol/StdStyle.json"
        }
      }
    },
    "lib/forge-std/src/StdUtils.sol": {
      "lastModificationDate": 1690621291073,
      "contentHash": "3ce83748fd76644688f916c9cced545b",
      "sourceName": "lib/forge-std/src/StdUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdUtils": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdUtils.sol/StdUtils.json"
        }
      }
    },
    "lib/forge-std/src/Test.sol": {
      "lastModificationDate": 1690621291797,
      "contentHash": "c67db2c47c2e757cc33d38d6db0b1562",
      "sourceName": "lib/forge-std/src/Test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/forge-std/src/safeconsole.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Test": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Test.sol/Test.json"
        }
      }
    },
    "lib/forge-std/src/Vm.sol": {
      "lastModificationDate": 1690621291073,
      "contentHash": "b098c2721502365797aae8d0ee1babb8",
      "sourceName": "lib/forge-std/src/Vm.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Vm": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Vm.sol/Vm.json"
        },
        "VmSafe": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Vm.sol/VmSafe.json"
        }
      }
    },
    "lib/forge-std/src/console.sol": {
      "lastModificationDate": 1690621291073,
      "contentHash": "100b8a33b917da1147740d7ab8b0ded3",
      "sourceName": "lib/forge-std/src/console.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "console.sol/console.json"
        }
      }
    },
    "lib/forge-std/src/console2.sol": {
      "lastModificationDate": 1690621291077,
      "contentHash": "491ca717c1915995e78cc361485a3067",
      "sourceName": "lib/forge-std/src/console2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console2": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "console2.sol/console2.json"
        }
      }
    },
    "lib/forge-std/src/interfaces/IMulticall3.sol": {
      "lastModificationDate": 1690621291077,
      "contentHash": "7b131ca1ca32ef6378b7b9ad5488b901",
      "sourceName": "lib/forge-std/src/interfaces/IMulticall3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "IMulticall3": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IMulticall3.sol/IMulticall3.json"
        }
      }
    },
    "lib/forge-std/src/safeconsole.sol": {
      "lastModificationDate": 1690621291077,
      "contentHash": "ac3b1bf5a444db5db3656021830258a8",
      "sourceName": "lib/forge-std/src/safeconsole.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "safeconsole": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "safeconsole.sol/safeconsole.json"
        }
      }
    },
    "node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol": {
      "lastModificationDate": 1692097938304,
      "contentHash": "eb9cc526ef59dfc4d644f56ddca0633a",
      "sourceName": "node_modules/@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "VRFConsumerBaseV2": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "VRFConsumerBaseV2.sol/VRFConsumerBaseV2.json"
        }
      }
    },
    "node_modules/@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol": {
      "lastModificationDate": 1692097938288,
      "contentHash": "da5a0c3bd86c896f6a407f909c57edf3",
      "sourceName": "node_modules/@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "LinkTokenInterface": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "LinkTokenInterface.sol/LinkTokenInterface.json"
        }
      }
    },
    "node_modules/@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol": {
      "lastModificationDate": 1692097938304,
      "contentHash": "8c9ed3426b676f67ee200a2bec96e224",
      "sourceName": "node_modules/@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "VRFCoordinatorV2Interface": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "VRFCoordinatorV2Interface.sol/VRFCoordinatorV2Interface.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
      "lastModificationDate": 1692092025547,
      "contentHash": "a2b1ec38a8dad325a596f926890772b8",
      "sourceName": "node_modules/@openzeppelin/contracts/access/AccessControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AccessControl": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "AccessControl.sol/AccessControl.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
      "lastModificationDate": 1692092025647,
      "contentHash": "57c84298234411cea19c7c284d86be8b",
      "sourceName": "node_modules/@openzeppelin/contracts/access/IAccessControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IAccessControl": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IAccessControl.sol/IAccessControl.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
      "lastModificationDate": 1692092025699,
      "contentHash": "5a20b2cad87ddb61c7a3a6af21289e28",
      "sourceName": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Ownable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Ownable.sol/Ownable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC1271.sol": {
      "lastModificationDate": 1692092025659,
      "contentHash": "8fe867b95c856b204f954a1910e28a1e",
      "sourceName": "node_modules/@openzeppelin/contracts/interfaces/IERC1271.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1271": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC1271.sol/IERC1271.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
      "lastModificationDate": 1692092025663,
      "contentHash": "d0d060231a45da7a1eecbb5cd286fa40",
      "sourceName": "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1967": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC1967.sol/IERC1967.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol": {
      "lastModificationDate": 1692092025675,
      "contentHash": "b1756048024350a162c3be27c04aa652",
      "sourceName": "node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC5267": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC5267.sol/IERC5267.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
      "lastModificationDate": 1692092025583,
      "contentHash": "2858d98e74e67987ec81b39605230b74",
      "sourceName": "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1822Proxiable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "draft-IERC1822.sol/IERC1822Proxiable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
      "lastModificationDate": 1692092025607,
      "contentHash": "a127706394bead18392601a20d44867a",
      "sourceName": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {
        "ERC1967Upgrade": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC1967Upgrade.sol/ERC1967Upgrade.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {
      "lastModificationDate": 1692092025699,
      "contentHash": "40b3d81a836d50ff47e03893dcaaf204",
      "sourceName": "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Proxy": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Proxy.sol/Proxy.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
      "lastModificationDate": 1692092025655,
      "contentHash": "b6bd23bf19e90b771337037706470933",
      "sourceName": "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IBeacon": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IBeacon.sol/IBeacon.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
      "lastModificationDate": 1692092025703,
      "contentHash": "1535f8c0c68463f8c1b5239f7584e71f",
      "sourceName": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ReentrancyGuard": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ReentrancyGuard.sol/ReentrancyGuard.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
      "lastModificationDate": 1692092025591,
      "contentHash": "65c9d9c87e2b4df70e723819774a0482",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC1155": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC1155.sol/ERC1155.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
      "lastModificationDate": 1692092025659,
      "contentHash": "93aa9af4f5d2d2095a71ccde917038bb",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1155": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC1155.sol/IERC1155.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
      "lastModificationDate": 1692092025659,
      "contentHash": "9f8822b72fe2702979e40160cb6d9636",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1155Receiver": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC1155Receiver.sol/IERC1155Receiver.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
      "lastModificationDate": 1692092025659,
      "contentHash": "9148c2e10c4efb12c71a7f080da5559b",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1155MetadataURI": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC1155MetadataURI.sol/IERC1155MetadataURI.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
      "lastModificationDate": 1692092025599,
      "contentHash": "88079762e28b246888129028f757e047",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC1155Holder": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC1155Holder.sol/ERC1155Holder.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
      "lastModificationDate": 1692092025599,
      "contentHash": "55b180cf664783e9a2baac20e82683fb",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC1155Receiver": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC1155Receiver.sol/ERC1155Receiver.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
      "lastModificationDate": 1692092025667,
      "contentHash": "df36f7051335cd1e748b1b6463b7fdd3",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC20/IERC20.sol/IERC20.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
      "lastModificationDate": 1692092025667,
      "contentHash": "aa849939a4ae83a4dcb2dca9b3e9e707",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20Permit": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC20Permit.sol/IERC20Permit.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
      "lastModificationDate": 1692092025707,
      "contentHash": "1b5d667d3740d866eca0352758e59827",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SafeERC20": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SafeERC20.sol/SafeERC20.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
      "lastModificationDate": 1692092025623,
      "contentHash": "95602b04f0b53f1139f4668d123ddeb7",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC721": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC721.sol/ERC721.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
      "lastModificationDate": 1692092025675,
      "contentHash": "48de4c9a3a4ae5ef66a2aa620843413f",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC721.sol/IERC721.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
      "lastModificationDate": 1692092025679,
      "contentHash": "c22d4395e33763de693fd440c6fd10e1",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721Receiver": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC721Receiver.sol/IERC721Receiver.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
      "lastModificationDate": 1692092025679,
      "contentHash": "efbc0d15b80a74e34dbe8da0f3e879bb",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721Metadata": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC721Metadata.sol/IERC721Metadata.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
      "lastModificationDate": 1692092025627,
      "contentHash": "6dc9f7bfd1fc143b9124493d089282a2",
      "sourceName": "node_modules/@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC721Holder": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC721Holder.sol/ERC721Holder.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Address.sol": {
      "lastModificationDate": 1692092025551,
      "contentHash": "211ffd288c1588ba8c10eae668ca3c66",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/Address.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.1",
      "artifacts": {
        "Address": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Address.sol/Address.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Context.sol": {
      "lastModificationDate": 1692092025563,
      "contentHash": "5f2c5c4b6af2dd4551027144797bc8be",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/Context.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Context": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Context.sol/Context.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Counters.sol": {
      "lastModificationDate": 1692092025563,
      "contentHash": "74654e3ae5d7f39555055dfe244dab7a",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/Counters.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Counters": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Counters.sol/Counters.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Create2.sol": {
      "lastModificationDate": 1692092025567,
      "contentHash": "752ff0901adbdac182deace414d9e75f",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/Create2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Create2": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Create2.sol/Create2.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol": {
      "lastModificationDate": 1692092025707,
      "contentHash": "8dde288da49722a70f34ee369be4bfba",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.8",
      "artifacts": {
        "ShortStrings": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ShortStrings.sol/ShortStrings.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
      "lastModificationDate": 1692092025711,
      "contentHash": "682f7dd1f2e1147c8390e7575deceb2d",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "StorageSlot": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StorageSlot.sol/StorageSlot.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
      "lastModificationDate": 1692092025711,
      "contentHash": "48686fc32a22a3754b8e63321857dd2a",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Strings": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Strings.sol/Strings.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
      "lastModificationDate": 1692092025587,
      "contentHash": "d822a8a9468649cab463f29f5decf5cc",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ECDSA": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ECDSA.sol/ECDSA.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
      "lastModificationDate": 1692092025587,
      "contentHash": "459aeb9cc3fc3c6d67d30ffefb724aba",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol",
        "node_modules/@openzeppelin/contracts/utils/ShortStrings.sol",
        "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.8",
      "artifacts": {
        "EIP712": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "EIP712.sol/EIP712.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol": {
      "lastModificationDate": 1692092025707,
      "contentHash": "53d16b3bec482493405bdc74852eb2cd",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/interfaces/IERC1271.sol",
        "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SignatureChecker": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SignatureChecker.sol/SignatureChecker.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
      "lastModificationDate": 1692092025603,
      "contentHash": "0e7db055ce108f9da7bb6686a00287c0",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC165": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC165.sol/ERC165.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol": {
      "lastModificationDate": 1692092025603,
      "contentHash": "0a66857c4a2223ad54b814ea56470c97",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC165Checker": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC165Checker.sol/ERC165Checker.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "lastModificationDate": 1692092025663,
      "contentHash": "03e6768535ac4da0e9756f1d8a4a018a",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC165": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC165.sol/IERC165.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
      "lastModificationDate": 1692092025695,
      "contentHash": "fe63409d8a06818b926cf89e0ea88b1b",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Math": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Math.sol/Math.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
      "lastModificationDate": 1692092025707,
      "contentHash": "f6f4fda16c536e57069af40a245c985e",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SafeMath": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SafeMath.sol/SafeMath.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
      "lastModificationDate": 1692092025707,
      "contentHash": "9488ebd4daacfee8ad04811600d7d061",
      "sourceName": "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SignedMath": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SignedMath.sol/SignedMath.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
      "lastModificationDate": 1692092025543,
      "contentHash": "c88845618a815ef601f3f552c99d7ebb",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AccessControlUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "AccessControlUpgradeable.sol/AccessControlUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
      "lastModificationDate": 1692092025651,
      "contentHash": "21b43d1337ebc77c11da3cbe3fd65316",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IAccessControlUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IAccessControlUpgradeable.sol/IAccessControlUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC165Upgradeable.sol": {
      "lastModificationDate": 1692092025663,
      "contentHash": "0ce0dc23b57eb688403ad5169cc18a7d",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC165Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC165Upgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "interfaces/IERC165Upgradeable.sol/IERC165Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
      "lastModificationDate": 1692092025667,
      "contentHash": "a5421a5e611067b9202e83329fbf6fc7",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1967Upgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC1967Upgradeable.sol/IERC1967Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC4906Upgradeable.sol": {
      "lastModificationDate": 1692092025675,
      "contentHash": "fe5233feb20121d3fcadf24db464f5f8",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC4906Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC4906Upgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC4906Upgradeable.sol/IERC4906Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol": {
      "lastModificationDate": 1692092025675,
      "contentHash": "2b3f03127c03dd67be61c925b1f86ff3",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC5267Upgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC5267Upgradeable.sol/IERC5267Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC721Upgradeable.sol": {
      "lastModificationDate": 1692092025679,
      "contentHash": "b6d2f759a0c41967c68a26c21d5ecbe4",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC721Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721Upgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "interfaces/IERC721Upgradeable.sol/IERC721Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
      "lastModificationDate": 1692092025575,
      "contentHash": "a6883cfd85607b16c121a02728369eb3",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1822ProxiableUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "draft-IERC1822Upgradeable.sol/IERC1822ProxiableUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
      "lastModificationDate": 1692092025603,
      "contentHash": "2587366284baa690cce0accaca1a20f9",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {
        "ERC1967UpgradeUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC1967UpgradeUpgradeable.sol/ERC1967UpgradeUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
      "lastModificationDate": 1692092025655,
      "contentHash": "21bffd733b4ca013e125a0ffe2e52254",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IBeaconUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IBeaconUpgradeable.sol/IBeaconUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
      "lastModificationDate": 1692092025691,
      "contentHash": "b0970a564d121abf9adfff8d1a01eb16",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {
        "Initializable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "utils/Initializable.sol/Initializable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
      "lastModificationDate": 1692092025711,
      "contentHash": "52ef5d6c909d6f8ef3077445d3328eca",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "UUPSUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "UUPSUpgradeable.sol/UUPSUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
      "lastModificationDate": 1692092025699,
      "contentHash": "cbe53d6b803c1102081e00b3a0418ea3",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "PausableUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "PausableUpgradeable.sol/PausableUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
      "lastModificationDate": 1692092025611,
      "contentHash": "569edd57f8c6c7f5f750a3da1ed9c4c7",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC20Upgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC20Upgradeable.sol/ERC20Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
      "lastModificationDate": 1692092025671,
      "contentHash": "9a9398a7dbda9d014f04d5eb0fb581fd",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20Upgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC20Upgradeable.sol/IERC20Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol": {
      "lastModificationDate": 1692092025607,
      "contentHash": "ad0a0db40897f20f710e8cd4583ffdb8",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC20PermitUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC20PermitUpgradeable.sol/ERC20PermitUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol": {
      "lastModificationDate": 1692092025611,
      "contentHash": "7ec4aee04a3b0bf42d54678458267772",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20SnapshotUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC20SnapshotUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC20SnapshotUpgradeable.sol/ERC20SnapshotUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
      "lastModificationDate": 1692092025667,
      "contentHash": "9efcd5467a7f0bf533910ee8a267adb2",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20MetadataUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC20MetadataUpgradeable.sol/IERC20MetadataUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol": {
      "lastModificationDate": 1692092025671,
      "contentHash": "30ef13e9a1b22e74e5e4ce5ab2a247e4",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20PermitUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC20PermitUpgradeable.sol/IERC20PermitUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol": {
      "lastModificationDate": 1692092025575,
      "contentHash": "b08e9ea784596ed4ca849aa00c331049",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "draft-ERC20PermitUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "draft-ERC20PermitUpgradeable.sol/draft-ERC20PermitUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol": {
      "lastModificationDate": 1692092025627,
      "contentHash": "523926739c7d64c61fd57080f4bbcb05",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC721Upgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC721Upgradeable.sol/ERC721Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol": {
      "lastModificationDate": 1692092025679,
      "contentHash": "ba28cf60b52b00d2b3a190bcdf0952bd",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721ReceiverUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC721ReceiverUpgradeable.sol/IERC721ReceiverUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
      "lastModificationDate": 1692092025683,
      "contentHash": "f6c6e71ba8413a4ba32871610dba0658",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721Upgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC721Upgradeable.sol/IERC721Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol": {
      "lastModificationDate": 1692092025619,
      "contentHash": "a1881a83d0e39cb5169e398784075ee7",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC721BurnableUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC721BurnableUpgradeable.sol/ERC721BurnableUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol": {
      "lastModificationDate": 1692092025627,
      "contentHash": "47e0570153178b284d04fdc8947af91b",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC4906Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC721URIStorageUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC721URIStorageUpgradeable.sol/ERC721URIStorageUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
      "lastModificationDate": 1692092025679,
      "contentHash": "76212ca0265501d1eb3dd1175e6afca4",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721MetadataUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC721MetadataUpgradeable.sol/IERC721MetadataUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
      "lastModificationDate": 1692092025547,
      "contentHash": "c30c805386fda8a42ff515da963d3a95",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.1",
      "artifacts": {
        "AddressUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "AddressUpgradeable.sol/AddressUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol": {
      "lastModificationDate": 1692092025547,
      "contentHash": "da56499319c21af55ec5728542ebf4b6",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/ArraysUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ArraysUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ArraysUpgradeable.sol/ArraysUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
      "lastModificationDate": 1692092025555,
      "contentHash": "6200b84950eb05b4a92a39fd1d6e0f9b",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ContextUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ContextUpgradeable.sol/ContextUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol": {
      "lastModificationDate": 1692092025555,
      "contentHash": "2e908c762a799baea365e68a50500e2c",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "CountersUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "CountersUpgradeable.sol/CountersUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
      "lastModificationDate": 1692092025707,
      "contentHash": "02cf959b00ba5c650708472f195f8b29",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "StorageSlotUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StorageSlotUpgradeable.sol/StorageSlotUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
      "lastModificationDate": 1692092025707,
      "contentHash": "c221361be1c4953f5b71f47475b90266",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "StringsUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StringsUpgradeable.sol/StringsUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol": {
      "lastModificationDate": 1692092025579,
      "contentHash": "e6a08d062a6f4f6b05822a0fa19a1606",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ECDSAUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ECDSAUpgradeable.sol/ECDSAUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol": {
      "lastModificationDate": 1692092025583,
      "contentHash": "1574f8139cf0b307447c86cc89cd08f8",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/interfaces/IERC5267Upgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.8",
      "artifacts": {
        "EIP712Upgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "EIP712Upgradeable.sol/EIP712Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
      "lastModificationDate": 1692092025603,
      "contentHash": "5f2d8b81c0ff5bd2047b4846c20b998d",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC165Upgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC165Upgradeable.sol/ERC165Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
      "lastModificationDate": 1692092025663,
      "contentHash": "d6ecf203a5e72c845be9bbf2f304a289",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC165Upgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC165Upgradeable.sol/IERC165Upgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
      "lastModificationDate": 1692092025695,
      "contentHash": "5a2a749b45b6a8eb035f4bf75addcb27",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "MathUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "MathUpgradeable.sol/MathUpgradeable.json"
        }
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
      "lastModificationDate": 1692092025707,
      "contentHash": "2a6b819b2e241091ada6d645df3e3929",
      "sourceName": "node_modules/@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SignedMathUpgradeable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SignedMathUpgradeable.sol/SignedMathUpgradeable.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/dynamic-contracts/extension/ContractMetadata.sol": {
      "lastModificationDate": 1692092025803,
      "contentHash": "2ce0ec8d4073ceff0951f2559afefac7",
      "sourceName": "node_modules/@thirdweb-dev/contracts/dynamic-contracts/extension/ContractMetadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ContractMetadata": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ContractMetadata.sol/ContractMetadata.json"
        },
        "ContractMetadataStorage": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ContractMetadata.sol/ContractMetadataStorage.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/dynamic-contracts/extension/Initializable.sol": {
      "lastModificationDate": 1692092025911,
      "contentHash": "9e5acec8c81e2f57eb3d9ef529844104",
      "sourceName": "node_modules/@thirdweb-dev/contracts/dynamic-contracts/extension/Initializable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@thirdweb-dev/contracts/lib/TWAddress.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "InitStorage": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Initializable.sol/InitStorage.json"
        },
        "Initializable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "extension/Initializable.sol/Initializable.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/eip/ERC1271.sol": {
      "lastModificationDate": 1692092025839,
      "contentHash": "93aaf29465753c712c65ee06018aec9e",
      "sourceName": "node_modules/@thirdweb-dev/contracts/eip/ERC1271.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC1271": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC1271.sol/ERC1271.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/eip/interface/IERC20.sol": {
      "lastModificationDate": 1692092025899,
      "contentHash": "a64068f27c7945026e1f668f2ad99540",
      "sourceName": "node_modules/@thirdweb-dev/contracts/eip/interface/IERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "interface/IERC20.sol/IERC20.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/extension/BatchMintMetadata.sol": {
      "lastModificationDate": 1692092025799,
      "contentHash": "75c9ed022f5162abeeb3110b9bf26234",
      "sourceName": "node_modules/@thirdweb-dev/contracts/extension/BatchMintMetadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "BatchMintMetadata": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "BatchMintMetadata.sol/BatchMintMetadata.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/extension/DropSinglePhase.sol": {
      "lastModificationDate": 1692092025819,
      "contentHash": "291de85391ebbf84ea5ceafc71c7313b",
      "sourceName": "node_modules/@thirdweb-dev/contracts/extension/DropSinglePhase.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@thirdweb-dev/contracts/extension/interface/IClaimCondition.sol",
        "node_modules/@thirdweb-dev/contracts/extension/interface/IDropSinglePhase.sol",
        "node_modules/@thirdweb-dev/contracts/lib/MerkleProof.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "DropSinglePhase": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "DropSinglePhase.sol/DropSinglePhase.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/extension/LazyMint.sol": {
      "lastModificationDate": 1692092025931,
      "contentHash": "d49a9ee3f6b63cf297018bb35553f2b0",
      "sourceName": "node_modules/@thirdweb-dev/contracts/extension/LazyMint.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@thirdweb-dev/contracts/extension/BatchMintMetadata.sol",
        "node_modules/@thirdweb-dev/contracts/extension/interface/ILazyMint.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "LazyMint": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "LazyMint.sol/LazyMint.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/extension/Multicall.sol": {
      "lastModificationDate": 1692092025939,
      "contentHash": "5271b1c2e3b15bdacd682c3f2e372cea",
      "sourceName": "node_modules/@thirdweb-dev/contracts/extension/Multicall.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@thirdweb-dev/contracts/extension/interface/IMulticall.sol",
        "node_modules/@thirdweb-dev/contracts/lib/TWAddress.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Multicall": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Multicall.sol/Multicall.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/extension/interface/IAccountPermissions.sol": {
      "lastModificationDate": 1692092025867,
      "contentHash": "d17442282cca210b1e7e756485e078ee",
      "sourceName": "node_modules/@thirdweb-dev/contracts/extension/interface/IAccountPermissions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IAccountPermissions": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IAccountPermissions.sol/IAccountPermissions.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/extension/interface/IClaimCondition.sol": {
      "lastModificationDate": 1692092025875,
      "contentHash": "6c542108dd24d16a596fb6c599f27cbe",
      "sourceName": "node_modules/@thirdweb-dev/contracts/extension/interface/IClaimCondition.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IClaimCondition": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IClaimCondition.sol/IClaimCondition.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol": {
      "lastModificationDate": 1692092025879,
      "contentHash": "6cffce9927c3dacc15ccc20ee5a1d89e",
      "sourceName": "node_modules/@thirdweb-dev/contracts/extension/interface/IContractMetadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IContractMetadata": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IContractMetadata.sol/IContractMetadata.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/extension/interface/IDropSinglePhase.sol": {
      "lastModificationDate": 1692092025891,
      "contentHash": "f3ed7f9a9e436fc253ab7fa85c336bc8",
      "sourceName": "node_modules/@thirdweb-dev/contracts/extension/interface/IDropSinglePhase.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@thirdweb-dev/contracts/extension/interface/IClaimCondition.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IDropSinglePhase": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IDropSinglePhase.sol/IDropSinglePhase.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/extension/interface/ILazyMint.sol": {
      "lastModificationDate": 1692092025903,
      "contentHash": "3cd82a6420a255d911d86c6b19451fec",
      "sourceName": "node_modules/@thirdweb-dev/contracts/extension/interface/ILazyMint.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ILazyMint": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ILazyMint.sol/ILazyMint.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/extension/interface/IMulticall.sol": {
      "lastModificationDate": 1692092025911,
      "contentHash": "f940a79d3555cb15335797309e63f5d2",
      "sourceName": "node_modules/@thirdweb-dev/contracts/extension/interface/IMulticall.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IMulticall": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IMulticall.sol/IMulticall.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/interfaces/IWETH.sol": {
      "lastModificationDate": 1692092025931,
      "contentHash": "9d442e36e038beed704d10414faeac9e",
      "sourceName": "node_modules/@thirdweb-dev/contracts/interfaces/IWETH.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IWETH": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IWETH.sol/IWETH.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/lib/BytesLib.sol": {
      "lastModificationDate": 1692092025799,
      "contentHash": "6cc8aaf9ed04a455f8593bf925c54ec4",
      "sourceName": "node_modules/@thirdweb-dev/contracts/lib/BytesLib.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.8.0, <0.9.0",
      "artifacts": {
        "BytesLib": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "BytesLib.sol/BytesLib.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/lib/CurrencyTransferLib.sol": {
      "lastModificationDate": 1692092025807,
      "contentHash": "730e96a157131f935fea56910171eb20",
      "sourceName": "node_modules/@thirdweb-dev/contracts/lib/CurrencyTransferLib.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@thirdweb-dev/contracts/eip/interface/IERC20.sol",
        "node_modules/@thirdweb-dev/contracts/interfaces/IWETH.sol",
        "node_modules/@thirdweb-dev/contracts/lib/TWAddress.sol",
        "node_modules/@thirdweb-dev/contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "CurrencyTransferLib": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "CurrencyTransferLib.sol/CurrencyTransferLib.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/lib/MerkleProof.sol": {
      "lastModificationDate": 1692092025939,
      "contentHash": "88e09bd7a9f2dfd7feee6da3e752475b",
      "sourceName": "node_modules/@thirdweb-dev/contracts/lib/MerkleProof.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "MerkleProof": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "MerkleProof.sol/MerkleProof.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/lib/TWAddress.sol": {
      "lastModificationDate": 1692092025975,
      "contentHash": "5a657561820dab6efd6613a48ae33f51",
      "sourceName": "node_modules/@thirdweb-dev/contracts/lib/TWAddress.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "TWAddress": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "TWAddress.sol/TWAddress.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/openzeppelin-presets/proxy/Clones.sol": {
      "lastModificationDate": 1692092025803,
      "contentHash": "11535a839f5494023c396098504f5646",
      "sourceName": "node_modules/@thirdweb-dev/contracts/openzeppelin-presets/proxy/Clones.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Clones": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Clones.sol/Clones.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol": {
      "lastModificationDate": 1692092025959,
      "contentHash": "5168fb5df573a980a7258ad111d4ffe2",
      "sourceName": "node_modules/@thirdweb-dev/contracts/openzeppelin-presets/token/ERC20/utils/SafeERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@thirdweb-dev/contracts/eip/interface/IERC20.sol",
        "node_modules/@thirdweb-dev/contracts/lib/TWAddress.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SafeERC20": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "utils/SafeERC20.sol/SafeERC20.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/openzeppelin-presets/utils/structs/EnumerableSet.sol": {
      "lastModificationDate": 1692092025831,
      "contentHash": "aec6e37069dfaa5e3d5fd66ef2274b0c",
      "sourceName": "node_modules/@thirdweb-dev/contracts/openzeppelin-presets/utils/structs/EnumerableSet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "EnumerableSet": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "EnumerableSet.sol/EnumerableSet.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAccount.sol": {
      "lastModificationDate": 1692092025863,
      "contentHash": "e479b355e297e9df67b91884c880bd44",
      "sourceName": "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAccount.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/Helpers.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/UserOperation.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "IAccount": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IAccount.sol/IAccount.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAccountFactory.sol": {
      "lastModificationDate": 1692092025863,
      "contentHash": "8802329a41b5cd9a343da9bf2a332a4d",
      "sourceName": "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAccountFactory.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "IAccountFactory": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IAccountFactory.sol/IAccountFactory.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAggregator.sol": {
      "lastModificationDate": 1692092025867,
      "contentHash": "2a3c13c210a61331a512548e030e7abe",
      "sourceName": "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAggregator.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/Helpers.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/UserOperation.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "IAggregator": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IAggregator.sol/IAggregator.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IEntrypoint.sol": {
      "lastModificationDate": 1692092025891,
      "contentHash": "ef118f423f1833ba0628f1f068fa8dbf",
      "sourceName": "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IEntrypoint.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAggregator.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/INonceManager.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IStakeManager.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/Helpers.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/UserOperation.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "IEntryPoint": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IEntrypoint.sol/IEntryPoint.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/INonceManager.sol": {
      "lastModificationDate": 1692092025915,
      "contentHash": "e79dac16b33acff16cfc8b99eae14430",
      "sourceName": "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/INonceManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "INonceManager": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "INonceManager.sol/INonceManager.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IStakeManager.sol": {
      "lastModificationDate": 1692092025923,
      "contentHash": "459fb26b3301bff550d65bc07c3a37f2",
      "sourceName": "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IStakeManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "IStakeManager": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IStakeManager.sol/IStakeManager.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/BaseAccount.sol": {
      "lastModificationDate": 1692092025795,
      "contentHash": "96131e967e934229b2154721f8966ee2",
      "sourceName": "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/BaseAccount.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAccount.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAggregator.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IEntrypoint.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/INonceManager.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IStakeManager.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/Helpers.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/UserOperation.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "BaseAccount": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "BaseAccount.sol/BaseAccount.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/BaseAccountFactory.sol": {
      "lastModificationDate": 1692092025795,
      "contentHash": "3af28aee1455a0b1ca8620ddbedbb39e",
      "sourceName": "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/BaseAccountFactory.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@thirdweb-dev/contracts/extension/Multicall.sol",
        "node_modules/@thirdweb-dev/contracts/extension/interface/IAccountPermissions.sol",
        "node_modules/@thirdweb-dev/contracts/extension/interface/IMulticall.sol",
        "node_modules/@thirdweb-dev/contracts/lib/BytesLib.sol",
        "node_modules/@thirdweb-dev/contracts/lib/TWAddress.sol",
        "node_modules/@thirdweb-dev/contracts/openzeppelin-presets/proxy/Clones.sol",
        "node_modules/@thirdweb-dev/contracts/openzeppelin-presets/utils/structs/EnumerableSet.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAccount.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAccountFactory.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IAggregator.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IEntrypoint.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/INonceManager.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/interfaces/IStakeManager.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/BaseAccount.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/Helpers.sol",
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/UserOperation.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "BaseAccountFactory": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "BaseAccountFactory.sol/BaseAccountFactory.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/Helpers.sol": {
      "lastModificationDate": 1692092025863,
      "contentHash": "41721b2dfdd96780e089e4e3d0bd6543",
      "sourceName": "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/Helpers.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "Helpers": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Helpers.sol/Helpers.json"
        }
      }
    },
    "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/UserOperation.sol": {
      "lastModificationDate": 1692092025983,
      "contentHash": "2a68bea81dca73db694bfe1236d592fd",
      "sourceName": "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/UserOperation.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "node_modules/@thirdweb-dev/contracts/smart-wallet/utils/Helpers.sol"
      ],
      "versionRequirement": "^0.8.12",
      "artifacts": {
        "UserOperationLib": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "UserOperation.sol/UserOperationLib.json"
        }
      }
    }
  }
}